/**
 * @description –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
 */

import { Main, Functions } from "./Classes";
import { RandomInt } from "./Utils";
import moment from "moment";

export default class EventHandler extends Main {
  bot: any;
  functions: Functions;

  constructor(bot: any) {
    super();

    this.bot = bot;
    this.functions = new Functions(bot);
  }

  /**
   * @description –ü—Ä–æ—Å–ª—É—à–∫–∞ —Å–æ–±—ã—Ç–∏–π
   */
  public listen() {
    this.bot.event("message_new", async (ctx: any) => {
      let answer: string;

      switch(ctx.message.text.toLowerCase()) {
        case "–Ω–∞—á–∞—Ç—å":
          this.bot.execute("users.get", {
            user_ids: ctx.message.from_id
          }, (data: any) => {
            answer = `–ü—Ä–∏–≤–µ—Ç, ${data[0].first_name}! `;
            answer += "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–∞—Ä—Å–∏–∫ –∏ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ç—Ä—É–¥–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π üòä ";
            answer += "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤–æ–ø—Ä–æ—Å, —Ç—Ä–µ–±—É—é—â–∏–π –æ—Ç–≤–µ—Ç–∞ \"–¥–∞\" –∏–ª–∏ \"–Ω–µ—Ç\", –∏ —è –æ—Ç–≤–µ—á—É ü§ó";
            this.functions.sendMessage(ctx.message.from_id, answer);   
          });
          break;
        default:
          if (ctx.message.text.indexOf("?") !== -1) {
            // –ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å
            const answers = require("../include/answers.json");
            answer = answers[RandomInt(1, Object.keys(answers).length)];
          } else if (ctx.message.text.indexOf("–•–æ—Ä–æ—à–µ–µ üòå") !== -1) {
            this.functions.sendMessage(Number(process.env.VK_ID), "–ú—è—É, —Å—É–ø–µ—Ä, —Ö–æ—Ä–æ—à–æ —Å–ø–∞–ª–æ—Å—å? üòâ");
            setTimeout(() => {
              this.functions.sendCompliment();
            }, 10000);
          } else if (ctx.message.text.indexOf("–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ üòä") !== -1) {
            this.functions.sendMessage(Number(process.env.VK_ID), "–ú—è—É, —Ö–æ—Ä–æ—à–æ —Å–ø–∞–ª–æ—Å—å? üòâ");
            setTimeout(() => {
              this.functions.sendCompliment();
            }, 10000);
          } else if (ctx.message.text.indexOf("–ü–ª–æ—Ö–æ–µ üòê") !== -1) {
            this.functions.sendMessage(Number(process.env.VK_ID), "–ú—è—É, –Ω–µ –≥—Ä—É—Å—Ç–∏, —Ç—ã —Å–∞–º–∞—è –Ω–µ–æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è üòâ");
            setTimeout(() => {
              this.functions.sendCompliment();
            }, 10000);
          } else {
            // –†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ—Ä–∞–∑–∞
            const phrases = require("../include/phrases.json");  
            answer = phrases[RandomInt(1, Object.keys(phrases).length)];
          }
          this.functions.sendMessage(ctx.message.from_id, answer);
          break;
      }
    });
  }
}